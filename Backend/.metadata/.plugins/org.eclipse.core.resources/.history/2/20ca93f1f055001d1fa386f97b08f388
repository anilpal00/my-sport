package com.mysport.service.impl;

import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;

import com.mysport.entities.Appointment;
import com.mysport.entities.AppointmentStatus;
import com.mysport.repository.UserRepository;
import com.mysport.service.AppointmentService;

public class AppointmentServiceImpl implements AppointmentService {

	
	@Autowired
	private UserRepository userRepo;
	
//    @Override
//    public boolean isAvailable(int workId, int providerId, int customerId, LocalDateTime start) {
//        if (!workService.isWorkForCustomer(workId, customerId)) {
//            return false;
//        }
//        Work work = workService.getWorkById(workId);
//        TimePeroid timePeroid = new TimePeroid(start.toLocalTime(), start.toLocalTime().plusMinutes(work.getDuration()));
//        return getAvailableHours(providerId, customerId, workId, start.toLocalDate()).contains(timePeroid);
//    }
    
	@Override
	public void createNewAppointment(int workId, Long userId, LocalDateTime start) {
//		if (isAvailable(workId, providerId, customerId, start)) {
            Appointment appointment = new Appointment();
            appointment.setStatus(AppointmentStatus.SCHEDULED);
            appointment.setUser(userRepo.getById(userId));
            appointment.setProvider(userService.getProviderById(providerId));
            Work work = workService.getWorkById(workId);
            appointment.setWork(work);
            appointment.setStart(start);
            appointment.setEnd(start.plusMinutes(work.getDuration()));
            appointmentRepository.save(appointment);
            notificationService.newNewAppointmentScheduledNotification(appointment, true);
        } else {
            throw new RuntimeException();
        }
		
	}

}
